/* #region Header */
#CATEGORY "46" "NovaStar"
//#SYMBOL_NAME ""

//Author: Mat Klucznyk
//Company: Global USS
//Email: mathew.klucznyk@globaluss.com

#USER_SIMPLSHARP_LIBRARY "NovaStar"

#DEFAULT_VOLATILE
#ENABLE_STACK_CHECKING
#ENABLE_TRACE

#DEFINE_CONSTANT true 1
#DEFINE_CONSTANT false 0
/* #endregion */

/* #region IO Constructor */
//inputs
digital_input FadeToBlackOn, FadeToBlackOff, Freeze, Unfreeze;

//outputs
digital_output FadeToBlackIsOn, FadeToBlackIsOff, FreezeIsOn, FreezeIsOff;

//parameters
integer_parameter _skip_, _skip_, _skip_, _skip_, Screen_ID;
string_parameter Video_Wall_Splicer_Device_ID[255];

/*
#BEGIN_PARAMETER_PROPERTIES parameter_variable, parameter_variable, ...
   // propValidUnits = // unitString or unitDecimal|unitHex|unitPercent|unitCharacter|unitTime|unitTicks;
   // propDefaultUnit = // unitString, unitDecimal, unitHex, unitPercent, unitCharacter, unitTime or unitTicks;
   // propBounds = lower_bound , upper_bound;
   // propDefaultValue = ;  // or, propDefaultValue = "";
   // propList = // { "value" , "label" } , { "value" , "label" } , ... ;
   // propShortDescription = "status_bar_hint_text";
   // #BEGIN_PROP_FULL_DESCRIPTION  line_1...  line_2...  line_n  #END_PROP_FULL_DESCRIPTION
   // #BEGIN_PROP_NOTES line_1...  line_2...  line_n  #END_PROP_NOTES
#END_PARAMETER_PROPERTIES
*/

//objects
HSeriesScreen _screen;
/* #endregion */

/* #region Functions */

/* #endregion */

/* #region Events */
push FadeToBlackOn
{
	_screen.FadeToBlackOn();
}

push FadeToBlackOff
{
	_screen.FadeToBlackOff();
}

push Freeze
{
	_screen.FreezeOn();
}

push Unfreeze
{
	_screen.FreezeOff();
}
/* #endregion */

/* #region Callbacks */
eventhandler NewFtbStatusChanged(HSeriesScreen sender,NovaStarBoolEventArgs args)
{
	if(args.Payload)
	{
		FadeToBlackIsOff = false;
		FadeToBlackIsOn = true;
	}
	else
	{
		FadeToBlackIsOn = false;
		FadeToBlackIsOff = true;
	}
}

eventhandler NewFreezeStatusChanges(HSeriesScreen sender,NovaStarBoolEventArgs args)
{
	if(args.Payload)
	{
		FreezeIsOff = false;
		FreezeIsOn = true;
	}
	else
	{
		FreezeIsOn = false;
		FreezeIsOff = true;
	}
}
/* #endregion */

Function Main()
{
	WaitForInitializationComplete();
	RegisterEvent(_screen, FtbStatusChanged, NewFtbStatusChanged);
	RegisterEvent(_screen, FreezeStatusChanged, NewFreezeStatusChanges);
	
	_screen.Configure(Screen_ID, Video_Wall_Splicer_Device_ID);
}