/* #region Header */
//#SYMBOL_NAME ""
#CATEGORY "46" "Configuration" // Custom

//Author: Mat Klucznyk
//Company: Global USS
//Email: mathew.klucznyk@globaluss.com

#USER_SIMPLSHARP_LIBRARY "JsonConfigurator"

#DEFAULT_VOLATILE
#ENABLE_STACK_CHECKING
#ENABLE_TRACE

#DEFINE_CONSTANT true 1
#DEFINE_CONSTANT false 0
/* #endregion */

/* #region IO Constructor */
//inputs
digital_input ReadConfig;

//outputs
digital_output ConfigLoaded;

//parameters
string_parameter _skip_, ID[255], File_Path[255];

#BEGIN_PARAMETER_PROPERTIES ID
propValidUnits = unitString;
// propDefaultUnit = // unitString, unitDecimal, unitHex, unitPercent, unitCharacter, unitTime or unitTicks;
// propBounds = lower_bound , upper_bound;
propDefaultValue = "Manager 1";
propList = { "Manager 1" , "Manager 1" } , { "Manager 2" , "Manager 2" } , { "Manager 3" , "Manager 3" } , { "Manager 4" , "Manager 4" }, { "Manager 5" , "Manager 5" } ;
propShortDescription = "file_manager_id";
// #BEGIN_PROP_FULL_DESCRIPTION  line_1...  line_2...  line_n  #END_PROP_FULL_DESCRIPTION
// #BEGIN_PROP_NOTES line_1...  line_2...  line_n  #END_PROP_NOTES
#END_PARAMETER_PROPERTIES

#BEGIN_PARAMETER_PROPERTIES File_Path
propValidUnits = unitString;
// propDefaultUnit = // unitString, unitDecimal, unitHex, unitPercent, unitCharacter, unitTime or unitTicks;
// propBounds = lower_bound , upper_bound;
propDefaultValue = "//user//config.json";
// propList = // { "value" , "label" } , { "value" , "label" } , ... ;
propShortDescription = "full_file_path_to_config_file";
// #BEGIN_PROP_FULL_DESCRIPTION  line_1...  line_2...  line_n  #END_PROP_FULL_DESCRIPTION
// #BEGIN_PROP_NOTES line_1...  line_2...  line_n  #END_PROP_NOTES
#END_PARAMETER_PROPERTIES

//objects
ConfigReader _reader;
integer _ready;
/* #endregion */

/* #region Functions */
threadsafe push ReadConfig
{
	if(!len(File_Path)) return;
	
	while(!_ready);
	
	_reader.ReadConfig(File_Path);
}
/* #endregion */

/* #region Events */

/* #endregion */

/* #region Callbacks */
eventhandler ConfigLoadedChange_Handler(ConfigReader sender, BoolEventArgs args)
{
	ConfigLoaded = args.Payload;
}
/* #endregion */

Function Main()
{
	RegisterEvent(_reader, ConfigLoadedChange, ConfigLoadedChange_Handler);

	WaitForInitializationComplete();
	
	_reader.Configure(ID);
	
	delay(1100);
	_ready = true;
}