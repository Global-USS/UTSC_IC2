//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by CrestronConstruct.
//     Version: 1.3501.16.0
//
//     Project:     Seminar_Room
//     Version:     1.0.0.0
//     Sdk:         CH5:2.11.1
//     Strategy:    Classic
//     IndexOnly:   True
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Crestron.SimplSharp;
using Crestron.SimplSharpPro;
using Crestron.SimplSharpPro.DeviceSupport;
using System;
using System.Collections.Generic;
using System.Linq;

namespace Seminar_Room
{
    /// <summary>
    /// Common Interface for Root Contracts.
    /// </summary>
    public interface IContract
    {
        object UserObject { get; set; }
        void AddDevice(BasicTriListWithSmartObject device);
        void RemoveDevice(BasicTriListWithSmartObject device);

        /// <summary>
        /// Fires on ANY activity on the panel.
        /// </summary>
        event EventHandler<EventArgs> Activity;
    }

    /// <summary>
    /// Root contract giving access to top level project items such as Pages and global Widgets.
    /// </summary>
    public sealed class Contract : IContract, IDisposable
    {
        #region Components

        private ComponentMediator ComponentMediator { get; set; }

        public Seminar_Room.ILogOff_Page LogOff_Page { get { return (Seminar_Room.ILogOff_Page)InternalLogOff_Page; } }
        private Seminar_Room.LogOff_Page InternalLogOff_Page { get; set; }

        public Seminar_Room.Main_Page.IMain_Page Main_Page { get { return (Seminar_Room.Main_Page.IMain_Page)InternalMain_Page; } }
        private Seminar_Room.Main_Page.Main_Page InternalMain_Page { get; set; }

        public Seminar_Room.IWelcome_Page Welcome_Page { get { return (Seminar_Room.IWelcome_Page)InternalWelcome_Page; } }
        private Seminar_Room.Welcome_Page InternalWelcome_Page { get; set; }

        public Seminar_Room.IShutdown_Page Shutdown_Page { get { return (Seminar_Room.IShutdown_Page)InternalShutdown_Page; } }
        private Seminar_Room.Shutdown_Page InternalShutdown_Page { get; set; }

        public Seminar_Room.IProjDisp_01_PowerScreen_Widget ProjDisp_01_PowerScreen_Widget { get { return (Seminar_Room.IProjDisp_01_PowerScreen_Widget)InternalProjDisp_01_PowerScreen_Widget; } }
        private Seminar_Room.ProjDisp_01_PowerScreen_Widget InternalProjDisp_01_PowerScreen_Widget { get; set; }

        public Seminar_Room.ICam_01_Control_Widget Cam_01_Control_Widget { get { return (Seminar_Room.ICam_01_Control_Widget)InternalCam_01_Control_Widget; } }
        private Seminar_Room.Cam_01_Control_Widget InternalCam_01_Control_Widget { get; set; }

        public Seminar_Room.ICam_01_ControlPreset_Widget Cam_01_ControlPreset_Widget { get { return (Seminar_Room.ICam_01_ControlPreset_Widget)InternalCam_01_ControlPreset_Widget; } }
        private Seminar_Room.Cam_01_ControlPreset_Widget InternalCam_01_ControlPreset_Widget { get; set; }

        public Seminar_Room.IVolume_Control_02_Panel_Widget Volume_Control_02_Panel_Widget { get { return (Seminar_Room.IVolume_Control_02_Panel_Widget)InternalVolume_Control_02_Panel_Widget; } }
        private Seminar_Room.Volume_Control_02_Panel_Widget InternalVolume_Control_02_Panel_Widget { get; set; }

        public Seminar_Room.IVolume_Control_02_Cmute_Widget Volume_Control_02_Cmute_Widget { get { return (Seminar_Room.IVolume_Control_02_Cmute_Widget)InternalVolume_Control_02_Cmute_Widget; } }
        private Seminar_Room.Volume_Control_02_Cmute_Widget InternalVolume_Control_02_Cmute_Widget { get; set; }

        public Seminar_Room.ICam_02_Control_Widget Cam_02_Control_Widget { get { return (Seminar_Room.ICam_02_Control_Widget)InternalCam_02_Control_Widget; } }
        private Seminar_Room.Cam_02_Control_Widget InternalCam_02_Control_Widget { get; set; }

        public Seminar_Room.Proj_02_Source_04_Widget.IProj_02_Source_04_Widget Proj_02_Source_04_Widget { get { return (Seminar_Room.Proj_02_Source_04_Widget.IProj_02_Source_04_Widget)InternalProj_02_Source_04_Widget; } }
        private Seminar_Room.Proj_02_Source_04_Widget.Proj_02_Source_04_Widget InternalProj_02_Source_04_Widget { get; set; }

        public Seminar_Room.IAdmin_Login_Widget Admin_Login_Widget { get { return (Seminar_Room.IAdmin_Login_Widget)InternalAdmin_Login_Widget; } }
        private Seminar_Room.Admin_Login_Widget InternalAdmin_Login_Widget { get; set; }

        public Seminar_Room.ICam_02_ControlPreset_Widget Cam_02_ControlPreset_Widget { get { return (Seminar_Room.ICam_02_ControlPreset_Widget)InternalCam_02_ControlPreset_Widget; } }
        private Seminar_Room.Cam_02_ControlPreset_Widget InternalCam_02_ControlPreset_Widget { get; set; }

        public Seminar_Room.Admin_Volume_Widget.IAdmin_Volume_Widget Admin_Volume_Widget { get { return (Seminar_Room.Admin_Volume_Widget.IAdmin_Volume_Widget)InternalAdmin_Volume_Widget; } }
        private Seminar_Room.Admin_Volume_Widget.Admin_Volume_Widget InternalAdmin_Volume_Widget { get; set; }

        #endregion

        #region Construction and Initialization

        public Contract()
            : this(new List<BasicTriListWithSmartObject>().ToArray())
        {
        }

        public Contract(BasicTriListWithSmartObject device)
            : this(new [] { device })
        {
        }

        public Contract(BasicTriListWithSmartObject[] devices)
        {
            if (devices == null)
                throw new ArgumentNullException("Devices is null");

            ComponentMediator = new ComponentMediator();
            ComponentMediator.ConfigureActivityEvent(onActivity);

            InternalLogOff_Page = new Seminar_Room.LogOff_Page(ComponentMediator, 1);

            InternalMain_Page = new Seminar_Room.Main_Page.Main_Page(ComponentMediator, 2);

            InternalWelcome_Page = new Seminar_Room.Welcome_Page(ComponentMediator, 11);

            InternalShutdown_Page = new Seminar_Room.Shutdown_Page(ComponentMediator, 12);

            InternalProjDisp_01_PowerScreen_Widget = new Seminar_Room.ProjDisp_01_PowerScreen_Widget(ComponentMediator, 13);

            InternalCam_01_Control_Widget = new Seminar_Room.Cam_01_Control_Widget(ComponentMediator, 14);

            InternalCam_01_ControlPreset_Widget = new Seminar_Room.Cam_01_ControlPreset_Widget(ComponentMediator, 15);

            InternalVolume_Control_02_Panel_Widget = new Seminar_Room.Volume_Control_02_Panel_Widget(ComponentMediator, 16);

            InternalVolume_Control_02_Cmute_Widget = new Seminar_Room.Volume_Control_02_Cmute_Widget(ComponentMediator, 17);

            InternalCam_02_Control_Widget = new Seminar_Room.Cam_02_Control_Widget(ComponentMediator, 18);

            InternalProj_02_Source_04_Widget = new Seminar_Room.Proj_02_Source_04_Widget.Proj_02_Source_04_Widget(ComponentMediator, 19);

            InternalAdmin_Login_Widget = new Seminar_Room.Admin_Login_Widget(ComponentMediator, 21);

            InternalCam_02_ControlPreset_Widget = new Seminar_Room.Cam_02_ControlPreset_Widget(ComponentMediator, 22);

            InternalAdmin_Volume_Widget = new Seminar_Room.Admin_Volume_Widget.Admin_Volume_Widget(ComponentMediator, 23);


            for (int index = 0; index < devices.Length; index++)
            {
                AddDevice(devices[index]);
            }
        }

        /// <summary>
        /// Fires on ANY activity on the panel.
        /// </summary>
        public event EventHandler<EventArgs> Activity;
        private void onActivity(GenericBase currentDevice, SmartObjectEventArgs args)
        {
            var handler = Activity;
            if (handler != null)
                handler(currentDevice, args);
        }
        #endregion

        #region Standard Contract Members

        public object UserObject { get; set; }

        public void AddDevice(BasicTriListWithSmartObject device)
        {
            InternalLogOff_Page.AddDevice(device);
            InternalMain_Page.AddDevice(device);
            InternalWelcome_Page.AddDevice(device);
            InternalShutdown_Page.AddDevice(device);
            InternalProjDisp_01_PowerScreen_Widget.AddDevice(device);
            InternalCam_01_Control_Widget.AddDevice(device);
            InternalCam_01_ControlPreset_Widget.AddDevice(device);
            InternalVolume_Control_02_Panel_Widget.AddDevice(device);
            InternalVolume_Control_02_Cmute_Widget.AddDevice(device);
            InternalCam_02_Control_Widget.AddDevice(device);
            InternalProj_02_Source_04_Widget.AddDevice(device);
            InternalAdmin_Login_Widget.AddDevice(device);
            InternalCam_02_ControlPreset_Widget.AddDevice(device);
            InternalAdmin_Volume_Widget.AddDevice(device);

        }

        public void RemoveDevice(BasicTriListWithSmartObject device)
        {
            InternalLogOff_Page.RemoveDevice(device);
            InternalMain_Page.RemoveDevice(device);
            InternalWelcome_Page.RemoveDevice(device);
            InternalShutdown_Page.RemoveDevice(device);
            InternalProjDisp_01_PowerScreen_Widget.RemoveDevice(device);
            InternalCam_01_Control_Widget.RemoveDevice(device);
            InternalCam_01_ControlPreset_Widget.RemoveDevice(device);
            InternalVolume_Control_02_Panel_Widget.RemoveDevice(device);
            InternalVolume_Control_02_Cmute_Widget.RemoveDevice(device);
            InternalCam_02_Control_Widget.RemoveDevice(device);
            InternalProj_02_Source_04_Widget.RemoveDevice(device);
            InternalAdmin_Login_Widget.RemoveDevice(device);
            InternalCam_02_ControlPreset_Widget.RemoveDevice(device);
            InternalAdmin_Volume_Widget.RemoveDevice(device);
        }

        #endregion

        #region IDisposable

        public bool IsDisposed { get; set; }

        public void Dispose()
        {
            if (IsDisposed)
                return;

            IsDisposed = true;

            InternalLogOff_Page.Dispose();
            InternalMain_Page.Dispose();
            InternalWelcome_Page.Dispose();
            InternalShutdown_Page.Dispose();
            InternalProjDisp_01_PowerScreen_Widget.Dispose();
            InternalCam_01_Control_Widget.Dispose();
            InternalCam_01_ControlPreset_Widget.Dispose();
            InternalVolume_Control_02_Panel_Widget.Dispose();
            InternalVolume_Control_02_Cmute_Widget.Dispose();
            InternalCam_02_Control_Widget.Dispose();
            InternalProj_02_Source_04_Widget.Dispose();
            InternalAdmin_Login_Widget.Dispose();
            InternalCam_02_ControlPreset_Widget.Dispose();
            InternalAdmin_Volume_Widget.Dispose();

            ComponentMediator.Dispose(); 
        }

        #endregion
    }
}

