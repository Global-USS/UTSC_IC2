//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by CrestronConstruct.
//     Version: 1.3400.21.0
//
//     Project:     Active_Learning_Classroom
//     Version:     1.0.0.0
//     Sdk:         CH5:2.10.0
//     Strategy:    Classic
//     IndexOnly:   False
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Linq;
using Crestron.SimplSharpPro.DeviceSupport;
using Crestron.SimplSharpPro;
using Active_Learning_Classroom;

namespace Active_Learning_Classroom.Admin_Volume_Widget
{

    /// <summary>
    /// Allow click events by item
    /// </summary>
    public partial interface IListVolControlByItem
    {

        /// <summary>
        /// Event Admin_Volume_Widget.ListVolControl.Items[0].Btn.VolDec.Press (from panel to Control System)
        /// </summary>
        event EventHandler<ItemEventArgs> BtnVolDec_PressEvent;

        /// <summary>
        /// Event Admin_Volume_Widget.ListVolControl.Items[0].Btn.VolInc.Press (from panel to Control System)
        /// </summary>
        event EventHandler<ItemEventArgs> BtnVolInc_PressEvent;

        /// <summary>
        /// Event Admin_Volume_Widget.ListVolControl.Items[0].Guage.Vol.Lower Touch (from panel to Control System)
        /// </summary>
        event EventHandler<ItemEventArgs> GuageVol_LowerTouchEvent;

        /// <summary>
        /// List.VolControl.List_Item1_Visible Feedback
        /// </summary>
        /// <param name="listItemIndex">The index of the listItem (1 based).</param>
        /// <param name="callback">The delegate to set the feedback.</param>
        void List_Item_Visible(ushort listItemIndex, ListVolControlBoolInputSigDelegate callback);

        /// <summary>
        /// Helper List.VolControl.List_Item1_Visible Feedback
        /// </summary>
        /// <param name="listItemIndex">The index of the listItem (1 based).</param>
        /// <param name="digital">The <see="bool"/> value to set on the panel.</param>
        void List_Item_Visible(ushort listItemIndex, bool digital);

        /// <summary>
        /// Admin_Volume_Widget.ListVolControl.Items[0].Guage.Vol.Lower Touch fb Feedback
        /// </summary>
        /// <param name="itemIndex">Index of the Widget List (0 based).</param>
        /// <param name="callback">The ushort analog delegate to update the panel.</param>
        void GuageVol_LowerTouchfb(ushort itemIndex, ListVolControlUShortInputSigDelegate callback);

        /// <summary>
        /// {joinInfo.Notes} Feedback
        /// </summary>
        /// <param name=""itemIndex"">Index of the Widget List (0 based).</param>
        /// <param name=""analog"">The ushort analog value to send to the panel.</param>
        void GuageVol_LowerTouchfb(ushort itemIndex, ushort analog);

        /// <summary>
        /// Admin_Volume_Widget.ListVolControl.Items[0].Guage.Vol.Lower Touch fb Feedback
        /// </summary>
        /// <param name="itemIndex">Index of the Widget List (0 based).</param>
        /// <param name="analog">The short analog value to send to the panel.</param>
        void GuageVol_LowerTouchfb(ushort itemIndex, short analog);

        /// <summary>
        /// Admin_Volume_Widget.ListVolControl.Items[0].Str.VolName.Indirect Feedback
        /// </summary>
        /// <param name="itemIndex">Index of the Widget List (0 based).</param>
        /// <param name="callback">The <see cref="string"/> delegate to update the panel.</param>
        void StrVolName_Indirect(ushort itemIndex, ListVolControlStringInputSigDelegate callback);

        /// <summary>
        /// Admin_Volume_Widget.ListVolControl.Items[0].Str.VolName.Indirect Feedback
        /// </summary>
        /// <param name="itemIndex">Index of the Widget List (0 based).</param>
        /// <param name="serial">The <see cref="string"/> to update the panel.</param>
        void StrVolName_Indirect(ushort itemIndex, string serial);
    }


    /// <summary>
    /// Search List
    /// </summary>
    internal partial class ListVolControl
    {
        #region CH5 Contract
        /// <inheritdoc/>
        public event EventHandler<ItemEventArgs> BtnVolDec_PressEvent;
        private void onBtnVolDec_Press(IndexedEventArgs eventArgs)
        {
            EventHandler<ItemEventArgs> handler = BtnVolDec_PressEvent;
            if (handler != null)
                handler(this, new ItemEventArgs((SmartObjectEventArgs)eventArgs.SigArgs, eventArgs.JoinIndex));
        }

        /// <inheritdoc/>
        public event EventHandler<ItemEventArgs> BtnVolInc_PressEvent;
        private void onBtnVolInc_Press(IndexedEventArgs eventArgs)
        {
            EventHandler<ItemEventArgs> handler = BtnVolInc_PressEvent;
            if (handler != null)
                handler(this, new ItemEventArgs((SmartObjectEventArgs)eventArgs.SigArgs, eventArgs.JoinIndex));
        }

        /// <inheritdoc/>
        public event EventHandler<ItemEventArgs> GuageVol_LowerTouchEvent;
        private void onGuageVol_LowerTouch(IndexedEventArgs eventArgs)
        {
            EventHandler<ItemEventArgs> handler = GuageVol_LowerTouchEvent;
            if (handler != null)
                handler(this, new ItemEventArgs((SmartObjectEventArgs)eventArgs.SigArgs, eventArgs.JoinIndex));
        }

        /// <inheritdoc/>
        public void List_Item_Visible(ushort listItemIndex, ListVolControlBoolInputSigDelegate callback)
        {
            for (int index = 0; index < Devices.Count; index++)
            {
                callback(Devices[index].SmartObjects[ControlJoinId].BooleanInput[Joins.Booleans.ListVolControl_List_Item1_VisibleState + (uint) listItemIndex * 1], this);
            }
        }

        /// <inheritdoc/>
        public void List_Item_Visible(ushort listItemIndex, bool digital)
        {
            List_Item_Visible(listItemIndex, (sig, component) => sig.BoolValue = digital);
        }

        /// <inheritdoc/>
        public void GuageVol_LowerTouchfb(ushort itemIndex, ListVolControlUShortInputSigDelegate callback)
        {
            for (int index = 0; index < Devices.Count; index++)
            {
                callback(Devices[index].SmartObjects[ControlJoinId].UShortInput[Joins.Numerics.Items_0__GuageVol_LowerTouchfbState + (uint)itemIndex * 1], this);
            }
        }

        /// <inheritdoc/>
        public void GuageVol_LowerTouchfb(ushort itemIndex, ushort analog)
        {
            GuageVol_LowerTouchfb(itemIndex, (sig, component) => sig.UShortValue = analog);
        }

        /// <inheritdoc/>
        public void GuageVol_LowerTouchfb(ushort itemIndex, short analog)
        {
            GuageVol_LowerTouchfb(itemIndex, (sig, component) => sig.ShortValue = analog);
        }

        /// <inheritdoc/>
        public void StrVolName_Indirect(ushort itemIndex, ListVolControlStringInputSigDelegate callback)
        {
            for (int index = 0; index < Devices.Count; index++)
            {
                callback(Devices[index].SmartObjects[ControlJoinId].StringInput[Joins.Strings.Items_0__StrVolName_IndirectState + (uint) itemIndex * 1], this);
            }
        }

        /// <inheritdoc/>
        public void StrVolName_Indirect(ushort itemIndex, string serial)
        {
            StrVolName_Indirect(itemIndex, (sig, component) => sig.StringValue = serial);
        }

        #endregion
    }

    /// <summary>
    /// ListVolControl
    /// </summary>
    public partial interface IListVolControl : IListVolControlByItem
    {
        object UserObject { get; set; }

        /// <summary>
        /// Event Admin_Volume_Widget.ListVolControl.Items[0].Btn.VolDec.Press (from panel to Control System)
        /// </summary>
        event EventHandler<UIEventArgs> Items_0__BtnVolDec_PressEvent;

        /// <summary>
        /// Event Admin_Volume_Widget.ListVolControl.Items[0].Btn.VolInc.Press (from panel to Control System)
        /// </summary>
        event EventHandler<UIEventArgs> Items_0__BtnVolInc_PressEvent;

        /// <summary>
        /// Event Admin_Volume_Widget.ListVolControl.Items[1].Btn.VolDec.Press (from panel to Control System)
        /// </summary>
        event EventHandler<UIEventArgs> Items_1__BtnVolDec_PressEvent;

        /// <summary>
        /// Event Admin_Volume_Widget.ListVolControl.Items[1].Btn.VolInc.Press (from panel to Control System)
        /// </summary>
        event EventHandler<UIEventArgs> Items_1__BtnVolInc_PressEvent;

        /// <summary>
        /// Event Admin_Volume_Widget.ListVolControl.Items[2].Btn.VolDec.Press (from panel to Control System)
        /// </summary>
        event EventHandler<UIEventArgs> Items_2__BtnVolDec_PressEvent;

        /// <summary>
        /// Event Admin_Volume_Widget.ListVolControl.Items[2].Btn.VolInc.Press (from panel to Control System)
        /// </summary>
        event EventHandler<UIEventArgs> Items_2__BtnVolInc_PressEvent;

        /// <summary>
        /// Event Admin_Volume_Widget.ListVolControl.Items[3].Btn.VolDec.Press (from panel to Control System)
        /// </summary>
        event EventHandler<UIEventArgs> Items_3__BtnVolDec_PressEvent;

        /// <summary>
        /// Event Admin_Volume_Widget.ListVolControl.Items[3].Btn.VolInc.Press (from panel to Control System)
        /// </summary>
        event EventHandler<UIEventArgs> Items_3__BtnVolInc_PressEvent;

        /// <summary>
        /// Event Admin_Volume_Widget.ListVolControl.Items[4].Btn.VolDec.Press (from panel to Control System)
        /// </summary>
        event EventHandler<UIEventArgs> Items_4__BtnVolDec_PressEvent;

        /// <summary>
        /// Event Admin_Volume_Widget.ListVolControl.Items[4].Btn.VolInc.Press (from panel to Control System)
        /// </summary>
        event EventHandler<UIEventArgs> Items_4__BtnVolInc_PressEvent;

        /// <summary>
        /// Event Admin_Volume_Widget.ListVolControl.Items[5].Btn.VolDec.Press (from panel to Control System)
        /// </summary>
        event EventHandler<UIEventArgs> Items_5__BtnVolDec_PressEvent;

        /// <summary>
        /// Event Admin_Volume_Widget.ListVolControl.Items[5].Btn.VolInc.Press (from panel to Control System)
        /// </summary>
        event EventHandler<UIEventArgs> Items_5__BtnVolInc_PressEvent;

        /// <summary>
        /// Event Admin_Volume_Widget.ListVolControl.Items[0].Guage.Vol.Lower Touch (from panel to Control System)
        /// </summary>
        event EventHandler<UIEventArgs> Items_0__GuageVol_LowerTouchEvent;

        /// <summary>
        /// Event Admin_Volume_Widget.ListVolControl.Items[1].Guage.Vol.Lower Touch (from panel to Control System)
        /// </summary>
        event EventHandler<UIEventArgs> Items_1__GuageVol_LowerTouchEvent;

        /// <summary>
        /// Event Admin_Volume_Widget.ListVolControl.Items[2].Guage.Vol.Lower Touch (from panel to Control System)
        /// </summary>
        event EventHandler<UIEventArgs> Items_2__GuageVol_LowerTouchEvent;

        /// <summary>
        /// Event Admin_Volume_Widget.ListVolControl.Items[3].Guage.Vol.Lower Touch (from panel to Control System)
        /// </summary>
        event EventHandler<UIEventArgs> Items_3__GuageVol_LowerTouchEvent;

        /// <summary>
        /// Event Admin_Volume_Widget.ListVolControl.Items[4].Guage.Vol.Lower Touch (from panel to Control System)
        /// </summary>
        event EventHandler<UIEventArgs> Items_4__GuageVol_LowerTouchEvent;

        /// <summary>
        /// Event Admin_Volume_Widget.ListVolControl.Items[5].Guage.Vol.Lower Touch (from panel to Control System)
        /// </summary>
        event EventHandler<UIEventArgs> Items_5__GuageVol_LowerTouchEvent;

        /// <summary>
        /// List.VolControl.List_Item1_Visible Feedback
        /// </summary>
        /// <param name="callback">The bool delegate to update the panel.</param>
        void ListVolControl_List_Item1_Visible(ListVolControlBoolInputSigDelegate callback);

        /// <summary>
        /// List.VolControl.List_Item1_Visible Feedback
        /// </summary>
        /// <param name="digital">The bool to update the panel.</param>
        void ListVolControl_List_Item1_Visible(bool digital);

        /// <summary>
        /// List.VolControl.List_Item2_Visible Feedback
        /// </summary>
        /// <param name="callback">The bool delegate to update the panel.</param>
        void ListVolControl_List_Item2_Visible(ListVolControlBoolInputSigDelegate callback);

        /// <summary>
        /// List.VolControl.List_Item2_Visible Feedback
        /// </summary>
        /// <param name="digital">The bool to update the panel.</param>
        void ListVolControl_List_Item2_Visible(bool digital);

        /// <summary>
        /// List.VolControl.List_Item3_Visible Feedback
        /// </summary>
        /// <param name="callback">The bool delegate to update the panel.</param>
        void ListVolControl_List_Item3_Visible(ListVolControlBoolInputSigDelegate callback);

        /// <summary>
        /// List.VolControl.List_Item3_Visible Feedback
        /// </summary>
        /// <param name="digital">The bool to update the panel.</param>
        void ListVolControl_List_Item3_Visible(bool digital);

        /// <summary>
        /// List.VolControl.List_Item4_Visible Feedback
        /// </summary>
        /// <param name="callback">The bool delegate to update the panel.</param>
        void ListVolControl_List_Item4_Visible(ListVolControlBoolInputSigDelegate callback);

        /// <summary>
        /// List.VolControl.List_Item4_Visible Feedback
        /// </summary>
        /// <param name="digital">The bool to update the panel.</param>
        void ListVolControl_List_Item4_Visible(bool digital);

        /// <summary>
        /// List.VolControl.List_Item5_Visible Feedback
        /// </summary>
        /// <param name="callback">The bool delegate to update the panel.</param>
        void ListVolControl_List_Item5_Visible(ListVolControlBoolInputSigDelegate callback);

        /// <summary>
        /// List.VolControl.List_Item5_Visible Feedback
        /// </summary>
        /// <param name="digital">The bool to update the panel.</param>
        void ListVolControl_List_Item5_Visible(bool digital);

        /// <summary>
        /// List.VolControl.List_Item6_Visible Feedback
        /// </summary>
        /// <param name="callback">The bool delegate to update the panel.</param>
        void ListVolControl_List_Item6_Visible(ListVolControlBoolInputSigDelegate callback);

        /// <summary>
        /// List.VolControl.List_Item6_Visible Feedback
        /// </summary>
        /// <param name="digital">The bool to update the panel.</param>
        void ListVolControl_List_Item6_Visible(bool digital);

        /// <summary>
        /// Admin_Volume_Widget.ListVolControl.Items[0].Guage.Vol.Lower Touch fb Feedback
        /// </summary>
        /// <param name="callback">The ushort delegate to update the panel.</param>
        void Items_0__GuageVol_LowerTouchfb(ListVolControlUShortInputSigDelegate callback);

        /// <summary>
        /// Admin_Volume_Widget.ListVolControl.Items[0].Guage.Vol.Lower Touch fb Feedback
        /// </summary>
        /// <param name="callback">The ushort analog to update the panel.</param>
        void Items_0__GuageVol_LowerTouchfb(ushort analog);

        /// <summary>
        /// Admin_Volume_Widget.ListVolControl.Items[0].Guage.Vol.Lower Touch fb Feedback
        /// </summary>
        /// <param name="callback">The short analog to update the panel.</param>
        void Items_0__GuageVol_LowerTouchfb(short analog);

        /// <summary>
        /// Admin_Volume_Widget.ListVolControl.Items[1].Guage.Vol.Lower Touch fb Feedback
        /// </summary>
        /// <param name="callback">The ushort delegate to update the panel.</param>
        void Items_1__GuageVol_LowerTouchfb(ListVolControlUShortInputSigDelegate callback);

        /// <summary>
        /// Admin_Volume_Widget.ListVolControl.Items[1].Guage.Vol.Lower Touch fb Feedback
        /// </summary>
        /// <param name="callback">The ushort analog to update the panel.</param>
        void Items_1__GuageVol_LowerTouchfb(ushort analog);

        /// <summary>
        /// Admin_Volume_Widget.ListVolControl.Items[1].Guage.Vol.Lower Touch fb Feedback
        /// </summary>
        /// <param name="callback">The short analog to update the panel.</param>
        void Items_1__GuageVol_LowerTouchfb(short analog);

        /// <summary>
        /// Admin_Volume_Widget.ListVolControl.Items[2].Guage.Vol.Lower Touch fb Feedback
        /// </summary>
        /// <param name="callback">The ushort delegate to update the panel.</param>
        void Items_2__GuageVol_LowerTouchfb(ListVolControlUShortInputSigDelegate callback);

        /// <summary>
        /// Admin_Volume_Widget.ListVolControl.Items[2].Guage.Vol.Lower Touch fb Feedback
        /// </summary>
        /// <param name="callback">The ushort analog to update the panel.</param>
        void Items_2__GuageVol_LowerTouchfb(ushort analog);

        /// <summary>
        /// Admin_Volume_Widget.ListVolControl.Items[2].Guage.Vol.Lower Touch fb Feedback
        /// </summary>
        /// <param name="callback">The short analog to update the panel.</param>
        void Items_2__GuageVol_LowerTouchfb(short analog);

        /// <summary>
        /// Admin_Volume_Widget.ListVolControl.Items[3].Guage.Vol.Lower Touch fb Feedback
        /// </summary>
        /// <param name="callback">The ushort delegate to update the panel.</param>
        void Items_3__GuageVol_LowerTouchfb(ListVolControlUShortInputSigDelegate callback);

        /// <summary>
        /// Admin_Volume_Widget.ListVolControl.Items[3].Guage.Vol.Lower Touch fb Feedback
        /// </summary>
        /// <param name="callback">The ushort analog to update the panel.</param>
        void Items_3__GuageVol_LowerTouchfb(ushort analog);

        /// <summary>
        /// Admin_Volume_Widget.ListVolControl.Items[3].Guage.Vol.Lower Touch fb Feedback
        /// </summary>
        /// <param name="callback">The short analog to update the panel.</param>
        void Items_3__GuageVol_LowerTouchfb(short analog);

        /// <summary>
        /// Admin_Volume_Widget.ListVolControl.Items[4].Guage.Vol.Lower Touch fb Feedback
        /// </summary>
        /// <param name="callback">The ushort delegate to update the panel.</param>
        void Items_4__GuageVol_LowerTouchfb(ListVolControlUShortInputSigDelegate callback);

        /// <summary>
        /// Admin_Volume_Widget.ListVolControl.Items[4].Guage.Vol.Lower Touch fb Feedback
        /// </summary>
        /// <param name="callback">The ushort analog to update the panel.</param>
        void Items_4__GuageVol_LowerTouchfb(ushort analog);

        /// <summary>
        /// Admin_Volume_Widget.ListVolControl.Items[4].Guage.Vol.Lower Touch fb Feedback
        /// </summary>
        /// <param name="callback">The short analog to update the panel.</param>
        void Items_4__GuageVol_LowerTouchfb(short analog);

        /// <summary>
        /// Admin_Volume_Widget.ListVolControl.Items[5].Guage.Vol.Lower Touch fb Feedback
        /// </summary>
        /// <param name="callback">The ushort delegate to update the panel.</param>
        void Items_5__GuageVol_LowerTouchfb(ListVolControlUShortInputSigDelegate callback);

        /// <summary>
        /// Admin_Volume_Widget.ListVolControl.Items[5].Guage.Vol.Lower Touch fb Feedback
        /// </summary>
        /// <param name="callback">The ushort analog to update the panel.</param>
        void Items_5__GuageVol_LowerTouchfb(ushort analog);

        /// <summary>
        /// Admin_Volume_Widget.ListVolControl.Items[5].Guage.Vol.Lower Touch fb Feedback
        /// </summary>
        /// <param name="callback">The short analog to update the panel.</param>
        void Items_5__GuageVol_LowerTouchfb(short analog);

        /// <summary>
        /// Admin_Volume_Widget.ListVolControl.Items[0].Str.VolName.Indirect Feedback
        /// </summary>
        /// <param name="callback">The <see cref="string"/> delegate to update the panel.</param>
        void Items_0__StrVolName_Indirect(ListVolControlStringInputSigDelegate callback);

        /// <summary>
        /// Admin_Volume_Widget.ListVolControl.Items[0].Str.VolName.Indirect Feedback
        /// </summary>
        /// <param name="serial">The <see cref="string"/> to update the panel.</param>
        void Items_0__StrVolName_Indirect(string serial);

        /// <summary>
        /// Admin_Volume_Widget.ListVolControl.Items[1].Str.VolName.Indirect Feedback
        /// </summary>
        /// <param name="callback">The <see cref="string"/> delegate to update the panel.</param>
        void Items_1__StrVolName_Indirect(ListVolControlStringInputSigDelegate callback);

        /// <summary>
        /// Admin_Volume_Widget.ListVolControl.Items[1].Str.VolName.Indirect Feedback
        /// </summary>
        /// <param name="serial">The <see cref="string"/> to update the panel.</param>
        void Items_1__StrVolName_Indirect(string serial);

        /// <summary>
        /// Admin_Volume_Widget.ListVolControl.Items[2].Str.VolName.Indirect Feedback
        /// </summary>
        /// <param name="callback">The <see cref="string"/> delegate to update the panel.</param>
        void Items_2__StrVolName_Indirect(ListVolControlStringInputSigDelegate callback);

        /// <summary>
        /// Admin_Volume_Widget.ListVolControl.Items[2].Str.VolName.Indirect Feedback
        /// </summary>
        /// <param name="serial">The <see cref="string"/> to update the panel.</param>
        void Items_2__StrVolName_Indirect(string serial);

        /// <summary>
        /// Admin_Volume_Widget.ListVolControl.Items[3].Str.VolName.Indirect Feedback
        /// </summary>
        /// <param name="callback">The <see cref="string"/> delegate to update the panel.</param>
        void Items_3__StrVolName_Indirect(ListVolControlStringInputSigDelegate callback);

        /// <summary>
        /// Admin_Volume_Widget.ListVolControl.Items[3].Str.VolName.Indirect Feedback
        /// </summary>
        /// <param name="serial">The <see cref="string"/> to update the panel.</param>
        void Items_3__StrVolName_Indirect(string serial);

        /// <summary>
        /// Admin_Volume_Widget.ListVolControl.Items[4].Str.VolName.Indirect Feedback
        /// </summary>
        /// <param name="callback">The <see cref="string"/> delegate to update the panel.</param>
        void Items_4__StrVolName_Indirect(ListVolControlStringInputSigDelegate callback);

        /// <summary>
        /// Admin_Volume_Widget.ListVolControl.Items[4].Str.VolName.Indirect Feedback
        /// </summary>
        /// <param name="serial">The <see cref="string"/> to update the panel.</param>
        void Items_4__StrVolName_Indirect(string serial);

        /// <summary>
        /// Admin_Volume_Widget.ListVolControl.Items[5].Str.VolName.Indirect Feedback
        /// </summary>
        /// <param name="callback">The <see cref="string"/> delegate to update the panel.</param>
        void Items_5__StrVolName_Indirect(ListVolControlStringInputSigDelegate callback);

        /// <summary>
        /// Admin_Volume_Widget.ListVolControl.Items[5].Str.VolName.Indirect Feedback
        /// </summary>
        /// <param name="serial">The <see cref="string"/> to update the panel.</param>
        void Items_5__StrVolName_Indirect(string serial);
    }

    /// <summary>
    /// Digital callback used in feedback events.
    /// </summary>
    /// <param name="boolInputSig">The <see cref="BoolInputSig"/> joinInfo data.</param>
    /// <param name="listvolcontrol">The <see cref="IListVolControl"/> on which to apply the feedback.</param>
    public delegate void ListVolControlBoolInputSigDelegate(BoolInputSig boolInputSig, IListVolControl listvolcontrol);
    /// <summary>
    /// Digital callback used in feedback events.
    /// </summary>
    /// <param name="uShortInputSig">The <see cref="UShortInputSig"/> joinInfo data.</param>
    /// <param name="listvolcontrol">The <see cref="IListVolControl"/> on which to apply the feedback.</param>
    public delegate void ListVolControlUShortInputSigDelegate(UShortInputSig uShortInputSig, IListVolControl listvolcontrol);
    /// <summary>
    /// Digital callback used in feedback events.
    /// </summary>
    /// <param name="stringInputSig">The <see cref="StringInputSig"/> joinInfo data.</param>
    /// <param name="listvolcontrol">The <see cref="IListVolControl"/> on which to apply the feedback.</param>
    public delegate void ListVolControlStringInputSigDelegate(StringInputSig stringInputSig, IListVolControl listvolcontrol);

    /// <summary>
    /// ListVolControl
    /// </summary>
    internal partial class ListVolControl : IListVolControl, IDisposable
    {
        #region Standard CH5 Component members

        private ComponentMediator ComponentMediator { get; set; }

        public object UserObject { get; set; }

        /// <summary>
        /// Gets the ControlJoinId a.k.a. SmartObjectId.  This Id identifies the extender symbol.
        /// </summary>
        public uint ControlJoinId { get; private set; }

        private IList<BasicTriListWithSmartObject> _devices;

        /// <summary>
        /// Gets the list of devices.
        /// </summary>
        public IList<BasicTriListWithSmartObject> Devices { get { return _devices; } }

        #endregion
        /// <summary>
        /// Number of Items.
        /// </summary>
        public uint ItemCount { get; private set; }

        #region Joins

        private static class Joins
        {
            /// <summary>
            /// Digital signals,
            /// </summary>
            internal static class Booleans
            {
                /// <summary>
                /// Output or Event digital joinInfo from panel to Control System: Admin_Volume_Widget.ListVolControl.Items[0].Admin_Volume_Control_WidgetCONTRACT.BtnVolDec.Press
                /// Admin_Volume_Widget.ListVolControl.Items[0].Btn.VolDec.Press
                /// </summary>
                public const uint Items_0__BtnVolDec_PressEvent = 1201;

                /// <summary>
                /// Output or Event digital joinInfo from panel to Control System: Admin_Volume_Widget.ListVolControl.Items[0].Admin_Volume_Control_WidgetCONTRACT.BtnVolInc.Press
                /// Admin_Volume_Widget.ListVolControl.Items[0].Btn.VolInc.Press
                /// </summary>
                public const uint Items_0__BtnVolInc_PressEvent = 1202;

                /// <summary>
                /// Output or Event digital joinInfo from panel to Control System: Admin_Volume_Widget.ListVolControl.Items[1].Admin_Volume_Control_WidgetCONTRACT.BtnVolDec.Press
                /// Admin_Volume_Widget.ListVolControl.Items[1].Btn.VolDec.Press
                /// </summary>
                public const uint Items_1__BtnVolDec_PressEvent = 1203;

                /// <summary>
                /// Output or Event digital joinInfo from panel to Control System: Admin_Volume_Widget.ListVolControl.Items[1].Admin_Volume_Control_WidgetCONTRACT.BtnVolInc.Press
                /// Admin_Volume_Widget.ListVolControl.Items[1].Btn.VolInc.Press
                /// </summary>
                public const uint Items_1__BtnVolInc_PressEvent = 1204;

                /// <summary>
                /// Output or Event digital joinInfo from panel to Control System: Admin_Volume_Widget.ListVolControl.Items[2].Admin_Volume_Control_WidgetCONTRACT.BtnVolDec.Press
                /// Admin_Volume_Widget.ListVolControl.Items[2].Btn.VolDec.Press
                /// </summary>
                public const uint Items_2__BtnVolDec_PressEvent = 1205;

                /// <summary>
                /// Output or Event digital joinInfo from panel to Control System: Admin_Volume_Widget.ListVolControl.Items[2].Admin_Volume_Control_WidgetCONTRACT.BtnVolInc.Press
                /// Admin_Volume_Widget.ListVolControl.Items[2].Btn.VolInc.Press
                /// </summary>
                public const uint Items_2__BtnVolInc_PressEvent = 1206;

                /// <summary>
                /// Output or Event digital joinInfo from panel to Control System: Admin_Volume_Widget.ListVolControl.Items[3].Admin_Volume_Control_WidgetCONTRACT.BtnVolDec.Press
                /// Admin_Volume_Widget.ListVolControl.Items[3].Btn.VolDec.Press
                /// </summary>
                public const uint Items_3__BtnVolDec_PressEvent = 1207;

                /// <summary>
                /// Output or Event digital joinInfo from panel to Control System: Admin_Volume_Widget.ListVolControl.Items[3].Admin_Volume_Control_WidgetCONTRACT.BtnVolInc.Press
                /// Admin_Volume_Widget.ListVolControl.Items[3].Btn.VolInc.Press
                /// </summary>
                public const uint Items_3__BtnVolInc_PressEvent = 1208;

                /// <summary>
                /// Output or Event digital joinInfo from panel to Control System: Admin_Volume_Widget.ListVolControl.Items[4].Admin_Volume_Control_WidgetCONTRACT.BtnVolDec.Press
                /// Admin_Volume_Widget.ListVolControl.Items[4].Btn.VolDec.Press
                /// </summary>
                public const uint Items_4__BtnVolDec_PressEvent = 1209;

                /// <summary>
                /// Output or Event digital joinInfo from panel to Control System: Admin_Volume_Widget.ListVolControl.Items[4].Admin_Volume_Control_WidgetCONTRACT.BtnVolInc.Press
                /// Admin_Volume_Widget.ListVolControl.Items[4].Btn.VolInc.Press
                /// </summary>
                public const uint Items_4__BtnVolInc_PressEvent = 1210;

                /// <summary>
                /// Output or Event digital joinInfo from panel to Control System: Admin_Volume_Widget.ListVolControl.Items[5].Admin_Volume_Control_WidgetCONTRACT.BtnVolDec.Press
                /// Admin_Volume_Widget.ListVolControl.Items[5].Btn.VolDec.Press
                /// </summary>
                public const uint Items_5__BtnVolDec_PressEvent = 1211;

                /// <summary>
                /// Output or Event digital joinInfo from panel to Control System: Admin_Volume_Widget.ListVolControl.Items[5].Admin_Volume_Control_WidgetCONTRACT.BtnVolInc.Press
                /// Admin_Volume_Widget.ListVolControl.Items[5].Btn.VolInc.Press
                /// </summary>
                public const uint Items_5__BtnVolInc_PressEvent = 1212;


                /// <summary>
                /// Input or Feedback digital joinInfo from Control System to panel: Admin_Volume_Widget.ListVolControl.List_Item1_Visible
                /// List.VolControl.List_Item1_Visible
                /// </summary>
                public const uint ListVolControl_List_Item1_VisibleState = 1;

                /// <summary>
                /// Input or Feedback digital joinInfo from Control System to panel: Admin_Volume_Widget.ListVolControl.List_Item2_Visible
                /// List.VolControl.List_Item2_Visible
                /// </summary>
                public const uint ListVolControl_List_Item2_VisibleState = 2;

                /// <summary>
                /// Input or Feedback digital joinInfo from Control System to panel: Admin_Volume_Widget.ListVolControl.List_Item3_Visible
                /// List.VolControl.List_Item3_Visible
                /// </summary>
                public const uint ListVolControl_List_Item3_VisibleState = 3;

                /// <summary>
                /// Input or Feedback digital joinInfo from Control System to panel: Admin_Volume_Widget.ListVolControl.List_Item4_Visible
                /// List.VolControl.List_Item4_Visible
                /// </summary>
                public const uint ListVolControl_List_Item4_VisibleState = 4;

                /// <summary>
                /// Input or Feedback digital joinInfo from Control System to panel: Admin_Volume_Widget.ListVolControl.List_Item5_Visible
                /// List.VolControl.List_Item5_Visible
                /// </summary>
                public const uint ListVolControl_List_Item5_VisibleState = 5;

                /// <summary>
                /// Input or Feedback digital joinInfo from Control System to panel: Admin_Volume_Widget.ListVolControl.List_Item6_Visible
                /// List.VolControl.List_Item6_Visible
                /// </summary>
                public const uint ListVolControl_List_Item6_VisibleState = 6;

            }
            /// <summary>
            /// Analog signals.
            /// </summary>
            internal static class Numerics
            {
                /// <summary>
                /// Output or Event analog joinInfo from panel to Control System: Admin_Volume_Widget.ListVolControl.Items[0].Admin_Volume_Control_WidgetCONTRACT.GuageVol.LowerTouch
                /// Admin_Volume_Widget.ListVolControl.Items[0].Guage.Vol.Lower Touch
                /// </summary>
                public const uint Items_0__GuageVol_LowerTouchEvent = 1801;

                /// <summary>
                /// Output or Event analog joinInfo from panel to Control System: Admin_Volume_Widget.ListVolControl.Items[1].Admin_Volume_Control_WidgetCONTRACT.GuageVol.LowerTouch
                /// Admin_Volume_Widget.ListVolControl.Items[1].Guage.Vol.Lower Touch
                /// </summary>
                public const uint Items_1__GuageVol_LowerTouchEvent = 1802;

                /// <summary>
                /// Output or Event analog joinInfo from panel to Control System: Admin_Volume_Widget.ListVolControl.Items[2].Admin_Volume_Control_WidgetCONTRACT.GuageVol.LowerTouch
                /// Admin_Volume_Widget.ListVolControl.Items[2].Guage.Vol.Lower Touch
                /// </summary>
                public const uint Items_2__GuageVol_LowerTouchEvent = 1803;

                /// <summary>
                /// Output or Event analog joinInfo from panel to Control System: Admin_Volume_Widget.ListVolControl.Items[3].Admin_Volume_Control_WidgetCONTRACT.GuageVol.LowerTouch
                /// Admin_Volume_Widget.ListVolControl.Items[3].Guage.Vol.Lower Touch
                /// </summary>
                public const uint Items_3__GuageVol_LowerTouchEvent = 1804;

                /// <summary>
                /// Output or Event analog joinInfo from panel to Control System: Admin_Volume_Widget.ListVolControl.Items[4].Admin_Volume_Control_WidgetCONTRACT.GuageVol.LowerTouch
                /// Admin_Volume_Widget.ListVolControl.Items[4].Guage.Vol.Lower Touch
                /// </summary>
                public const uint Items_4__GuageVol_LowerTouchEvent = 1805;

                /// <summary>
                /// Output or Event analog joinInfo from panel to Control System: Admin_Volume_Widget.ListVolControl.Items[5].Admin_Volume_Control_WidgetCONTRACT.GuageVol.LowerTouch
                /// Admin_Volume_Widget.ListVolControl.Items[5].Guage.Vol.Lower Touch
                /// </summary>
                public const uint Items_5__GuageVol_LowerTouchEvent = 1806;


                /// <summary>
                /// Input or Feedback analog joinInfo from Control System to panel: Admin_Volume_Widget.ListVolControl.Items[0].Admin_Volume_Control_WidgetCONTRACT.GuageVol.LowerTouchfb
                /// Admin_Volume_Widget.ListVolControl.Items[0].Guage.Vol.Lower Touch fb
                /// </summary>
                public const uint Items_0__GuageVol_LowerTouchfbState = 1801;

                /// <summary>
                /// Input or Feedback analog joinInfo from Control System to panel: Admin_Volume_Widget.ListVolControl.Items[1].Admin_Volume_Control_WidgetCONTRACT.GuageVol.LowerTouchfb
                /// Admin_Volume_Widget.ListVolControl.Items[1].Guage.Vol.Lower Touch fb
                /// </summary>
                public const uint Items_1__GuageVol_LowerTouchfbState = 1802;

                /// <summary>
                /// Input or Feedback analog joinInfo from Control System to panel: Admin_Volume_Widget.ListVolControl.Items[2].Admin_Volume_Control_WidgetCONTRACT.GuageVol.LowerTouchfb
                /// Admin_Volume_Widget.ListVolControl.Items[2].Guage.Vol.Lower Touch fb
                /// </summary>
                public const uint Items_2__GuageVol_LowerTouchfbState = 1803;

                /// <summary>
                /// Input or Feedback analog joinInfo from Control System to panel: Admin_Volume_Widget.ListVolControl.Items[3].Admin_Volume_Control_WidgetCONTRACT.GuageVol.LowerTouchfb
                /// Admin_Volume_Widget.ListVolControl.Items[3].Guage.Vol.Lower Touch fb
                /// </summary>
                public const uint Items_3__GuageVol_LowerTouchfbState = 1804;

                /// <summary>
                /// Input or Feedback analog joinInfo from Control System to panel: Admin_Volume_Widget.ListVolControl.Items[4].Admin_Volume_Control_WidgetCONTRACT.GuageVol.LowerTouchfb
                /// Admin_Volume_Widget.ListVolControl.Items[4].Guage.Vol.Lower Touch fb
                /// </summary>
                public const uint Items_4__GuageVol_LowerTouchfbState = 1805;

                /// <summary>
                /// Input or Feedback analog joinInfo from Control System to panel: Admin_Volume_Widget.ListVolControl.Items[5].Admin_Volume_Control_WidgetCONTRACT.GuageVol.LowerTouchfb
                /// Admin_Volume_Widget.ListVolControl.Items[5].Guage.Vol.Lower Touch fb
                /// </summary>
                public const uint Items_5__GuageVol_LowerTouchfbState = 1806;

            }
            /// <summary>
            /// Serial signals.
            /// </summary>
            internal static class Strings
            {

                /// <summary>
                /// Input or Feedback serial joinInfo from Control System to panel: Admin_Volume_Widget.ListVolControl.Items[0].Admin_Volume_Control_WidgetCONTRACT.StrVolName.Indirect
                /// Admin_Volume_Widget.ListVolControl.Items[0].Str.VolName.Indirect
                /// </summary>
                public const uint Items_0__StrVolName_IndirectState = 1;
                /// <summary>
                /// Input or Feedback serial joinInfo from Control System to panel: Admin_Volume_Widget.ListVolControl.Items[1].Admin_Volume_Control_WidgetCONTRACT.StrVolName.Indirect
                /// Admin_Volume_Widget.ListVolControl.Items[1].Str.VolName.Indirect
                /// </summary>
                public const uint Items_1__StrVolName_IndirectState = 2;
                /// <summary>
                /// Input or Feedback serial joinInfo from Control System to panel: Admin_Volume_Widget.ListVolControl.Items[2].Admin_Volume_Control_WidgetCONTRACT.StrVolName.Indirect
                /// Admin_Volume_Widget.ListVolControl.Items[2].Str.VolName.Indirect
                /// </summary>
                public const uint Items_2__StrVolName_IndirectState = 3;
                /// <summary>
                /// Input or Feedback serial joinInfo from Control System to panel: Admin_Volume_Widget.ListVolControl.Items[3].Admin_Volume_Control_WidgetCONTRACT.StrVolName.Indirect
                /// Admin_Volume_Widget.ListVolControl.Items[3].Str.VolName.Indirect
                /// </summary>
                public const uint Items_3__StrVolName_IndirectState = 4;
                /// <summary>
                /// Input or Feedback serial joinInfo from Control System to panel: Admin_Volume_Widget.ListVolControl.Items[4].Admin_Volume_Control_WidgetCONTRACT.StrVolName.Indirect
                /// Admin_Volume_Widget.ListVolControl.Items[4].Str.VolName.Indirect
                /// </summary>
                public const uint Items_4__StrVolName_IndirectState = 5;
                /// <summary>
                /// Input or Feedback serial joinInfo from Control System to panel: Admin_Volume_Widget.ListVolControl.Items[5].Admin_Volume_Control_WidgetCONTRACT.StrVolName.Indirect
                /// Admin_Volume_Widget.ListVolControl.Items[5].Str.VolName.Indirect
                /// </summary>
                public const uint Items_5__StrVolName_IndirectState = 6;
            }
        }

        #endregion

        #region Construction and Initialization

        /// <summary>
        /// Initializes a new instance of the <see cref="ListVolControl"/> component class.
        /// </summary>
        /// <param name="componentMediator">The <see cref="ComponentMediator"/> used to instantiate the component.</param>
        /// <param name="controlJoinId">The SmartObjectId at which to create the component.</param>
        /// <param name="itemCount">The number of items.</param>
        internal ListVolControl(ComponentMediator componentMediator, uint controlJoinId, uint? itemCount)
        {
            ComponentMediator = componentMediator;
            Initialize(controlJoinId, itemCount);
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="ListVolControl"/> component class.
        /// </summary>
        /// <param name="componentMediator">The <see cref="ComponentMediator"/> used to instantiate the component.</param>
        /// <param name="controlJoinId">The SmartObjectId at which to create the component.</param>
        internal ListVolControl(ComponentMediator componentMediator, uint controlJoinId) : this(componentMediator, controlJoinId, null)
        {
        }

        /// <summary>
        /// Initializes a new instance with default itemCount.
        /// </summary>
        /// <param name="controlJoinId">The SmartObjectId at which to create the component.</param>
        private void Initialize(uint controlJoinId)
        {
            Initialize(controlJoinId, null);
        }

        private Dictionary<string, Indexes> _indexLookup = new Dictionary<string, Indexes>();

        /// <summary>
        /// Initializes a new instance of the <see cref="ListVolControl"/> component class.
        /// </summary>
        /// <param name="controlJoinId">The SmartObjectId at which to create the component.</param>
        /// <param name="itemCount">The number of items.</param>
        private void Initialize(uint controlJoinId, uint? itemCount)
        {
            ControlJoinId = controlJoinId; 
 
            _devices = new List<BasicTriListWithSmartObject>(); 
 
            _indexLookup.Add(eSigType.Bool.ToString() + Joins.Booleans.Items_0__BtnVolDec_PressEvent.ToString(), new Indexes(0, (ushort)Joins.Booleans.Items_0__BtnVolDec_PressEvent, false));
            _indexLookup.Add(eSigType.Bool.ToString() + Joins.Booleans.Items_0__BtnVolInc_PressEvent.ToString(), new Indexes(0, (ushort)Joins.Booleans.Items_0__BtnVolInc_PressEvent, false));
            _indexLookup.Add(eSigType.Bool.ToString() + Joins.Booleans.Items_1__BtnVolDec_PressEvent.ToString(), new Indexes(1, (ushort)Joins.Booleans.Items_0__BtnVolDec_PressEvent, false));
            _indexLookup.Add(eSigType.Bool.ToString() + Joins.Booleans.Items_1__BtnVolInc_PressEvent.ToString(), new Indexes(1, (ushort)Joins.Booleans.Items_0__BtnVolInc_PressEvent, false));
            _indexLookup.Add(eSigType.Bool.ToString() + Joins.Booleans.Items_2__BtnVolDec_PressEvent.ToString(), new Indexes(2, (ushort)Joins.Booleans.Items_0__BtnVolDec_PressEvent, false));
            _indexLookup.Add(eSigType.Bool.ToString() + Joins.Booleans.Items_2__BtnVolInc_PressEvent.ToString(), new Indexes(2, (ushort)Joins.Booleans.Items_0__BtnVolInc_PressEvent, false));
            _indexLookup.Add(eSigType.Bool.ToString() + Joins.Booleans.Items_3__BtnVolDec_PressEvent.ToString(), new Indexes(3, (ushort)Joins.Booleans.Items_0__BtnVolDec_PressEvent, false));
            _indexLookup.Add(eSigType.Bool.ToString() + Joins.Booleans.Items_3__BtnVolInc_PressEvent.ToString(), new Indexes(3, (ushort)Joins.Booleans.Items_0__BtnVolInc_PressEvent, false));
            _indexLookup.Add(eSigType.Bool.ToString() + Joins.Booleans.Items_4__BtnVolDec_PressEvent.ToString(), new Indexes(4, (ushort)Joins.Booleans.Items_0__BtnVolDec_PressEvent, false));
            _indexLookup.Add(eSigType.Bool.ToString() + Joins.Booleans.Items_4__BtnVolInc_PressEvent.ToString(), new Indexes(4, (ushort)Joins.Booleans.Items_0__BtnVolInc_PressEvent, false));
            _indexLookup.Add(eSigType.Bool.ToString() + Joins.Booleans.Items_5__BtnVolDec_PressEvent.ToString(), new Indexes(5, (ushort)Joins.Booleans.Items_0__BtnVolDec_PressEvent, false));
            _indexLookup.Add(eSigType.Bool.ToString() + Joins.Booleans.Items_5__BtnVolInc_PressEvent.ToString(), new Indexes(5, (ushort)Joins.Booleans.Items_0__BtnVolInc_PressEvent, false));
            _indexLookup.Add(eSigType.UShort.ToString() + Joins.Numerics.Items_0__GuageVol_LowerTouchEvent.ToString(), new Indexes(0, (ushort)Joins.Numerics.Items_0__GuageVol_LowerTouchEvent, false));
            _indexLookup.Add(eSigType.UShort.ToString() + Joins.Numerics.Items_1__GuageVol_LowerTouchEvent.ToString(), new Indexes(1, (ushort)Joins.Numerics.Items_0__GuageVol_LowerTouchEvent, false));
            _indexLookup.Add(eSigType.UShort.ToString() + Joins.Numerics.Items_2__GuageVol_LowerTouchEvent.ToString(), new Indexes(2, (ushort)Joins.Numerics.Items_0__GuageVol_LowerTouchEvent, false));
            _indexLookup.Add(eSigType.UShort.ToString() + Joins.Numerics.Items_3__GuageVol_LowerTouchEvent.ToString(), new Indexes(3, (ushort)Joins.Numerics.Items_0__GuageVol_LowerTouchEvent, false));
            _indexLookup.Add(eSigType.UShort.ToString() + Joins.Numerics.Items_4__GuageVol_LowerTouchEvent.ToString(), new Indexes(4, (ushort)Joins.Numerics.Items_0__GuageVol_LowerTouchEvent, false));
            _indexLookup.Add(eSigType.UShort.ToString() + Joins.Numerics.Items_5__GuageVol_LowerTouchEvent.ToString(), new Indexes(5, (ushort)Joins.Numerics.Items_0__GuageVol_LowerTouchEvent, false));

            ComponentMediator.ConfigureBooleanItemEvent(controlJoinId, Joins.Booleans.Items_0__BtnVolDec_PressEvent, GetIndexes, onBtnVolDec_Press);
            ComponentMediator.ConfigureBooleanEvent(controlJoinId, Joins.Booleans.Items_0__BtnVolDec_PressEvent, onItems_0__BtnVolDec_Press);
            ComponentMediator.ConfigureBooleanItemEvent(controlJoinId, Joins.Booleans.Items_0__BtnVolInc_PressEvent, GetIndexes, onBtnVolInc_Press);
            ComponentMediator.ConfigureBooleanEvent(controlJoinId, Joins.Booleans.Items_0__BtnVolInc_PressEvent, onItems_0__BtnVolInc_Press);
            ComponentMediator.ConfigureBooleanEvent(controlJoinId, Joins.Booleans.Items_1__BtnVolDec_PressEvent, onItems_1__BtnVolDec_Press);
            ComponentMediator.ConfigureBooleanEvent(controlJoinId, Joins.Booleans.Items_1__BtnVolInc_PressEvent, onItems_1__BtnVolInc_Press);
            ComponentMediator.ConfigureBooleanEvent(controlJoinId, Joins.Booleans.Items_2__BtnVolDec_PressEvent, onItems_2__BtnVolDec_Press);
            ComponentMediator.ConfigureBooleanEvent(controlJoinId, Joins.Booleans.Items_2__BtnVolInc_PressEvent, onItems_2__BtnVolInc_Press);
            ComponentMediator.ConfigureBooleanEvent(controlJoinId, Joins.Booleans.Items_3__BtnVolDec_PressEvent, onItems_3__BtnVolDec_Press);
            ComponentMediator.ConfigureBooleanEvent(controlJoinId, Joins.Booleans.Items_3__BtnVolInc_PressEvent, onItems_3__BtnVolInc_Press);
            ComponentMediator.ConfigureBooleanEvent(controlJoinId, Joins.Booleans.Items_4__BtnVolDec_PressEvent, onItems_4__BtnVolDec_Press);
            ComponentMediator.ConfigureBooleanEvent(controlJoinId, Joins.Booleans.Items_4__BtnVolInc_PressEvent, onItems_4__BtnVolInc_Press);
            ComponentMediator.ConfigureBooleanEvent(controlJoinId, Joins.Booleans.Items_5__BtnVolDec_PressEvent, onItems_5__BtnVolDec_Press);
            ComponentMediator.ConfigureBooleanEvent(controlJoinId, Joins.Booleans.Items_5__BtnVolInc_PressEvent, onItems_5__BtnVolInc_Press);
            ComponentMediator.ConfigureNumericItemEvent(controlJoinId, Joins.Numerics.Items_0__GuageVol_LowerTouchEvent, GetIndexes, onGuageVol_LowerTouch);
            ComponentMediator.ConfigureNumericEvent(controlJoinId, Joins.Numerics.Items_0__GuageVol_LowerTouchEvent, onItems_0__GuageVol_LowerTouch);
            ComponentMediator.ConfigureNumericEvent(controlJoinId, Joins.Numerics.Items_1__GuageVol_LowerTouchEvent, onItems_1__GuageVol_LowerTouch);
            ComponentMediator.ConfigureNumericEvent(controlJoinId, Joins.Numerics.Items_2__GuageVol_LowerTouchEvent, onItems_2__GuageVol_LowerTouch);
            ComponentMediator.ConfigureNumericEvent(controlJoinId, Joins.Numerics.Items_3__GuageVol_LowerTouchEvent, onItems_3__GuageVol_LowerTouch);
            ComponentMediator.ConfigureNumericEvent(controlJoinId, Joins.Numerics.Items_4__GuageVol_LowerTouchEvent, onItems_4__GuageVol_LowerTouch);
            ComponentMediator.ConfigureNumericEvent(controlJoinId, Joins.Numerics.Items_5__GuageVol_LowerTouchEvent, onItems_5__GuageVol_LowerTouch);
        }

        /// <summary>
        /// Get the offset when using indexed complex components.
        /// </summary>
        /// <param name="controlJoinId">The SmartObjectId of the component.</param>
        /// <param name="join">The join offset.</param>
        /// <param name="eSigType">The join data type.</param>
        private Indexes GetIndexes(uint controlJoinId, uint join, eSigType eSigType)
        {
            Indexes indexes;
            if (_indexLookup.TryGetValue(eSigType.ToString() + join.ToString(), out indexes))
            {
                return new Indexes(indexes.ItemIndex, (ushort) (join - indexes.JoinIndex), false);
            }

            return new Indexes(0, 0, true);
        }

        public void AddDevice(BasicTriListWithSmartObject device)
        {
            Devices.Add(device);
            ComponentMediator.HookSmartObjectEvents(device.SmartObjects[ControlJoinId]);
        }

        public void RemoveDevice(BasicTriListWithSmartObject device)
        {
            Devices.Remove(device);
            ComponentMediator.UnHookSmartObjectEvents(device.SmartObjects[ControlJoinId]);
        }

        #endregion

        #region CH5 Contract

        /// <inheritdoc/>
        public event EventHandler<UIEventArgs> Items_0__BtnVolDec_PressEvent;
        private void onItems_0__BtnVolDec_Press(SmartObjectEventArgs eventArgs)
        {
            EventHandler<UIEventArgs> handler = Items_0__BtnVolDec_PressEvent;
            if (handler != null)
                handler(this, UIEventArgs.CreateEventArgs(eventArgs));
        }

        /// <inheritdoc/>
        public event EventHandler<UIEventArgs> Items_0__BtnVolInc_PressEvent;
        private void onItems_0__BtnVolInc_Press(SmartObjectEventArgs eventArgs)
        {
            EventHandler<UIEventArgs> handler = Items_0__BtnVolInc_PressEvent;
            if (handler != null)
                handler(this, UIEventArgs.CreateEventArgs(eventArgs));
        }

        /// <inheritdoc/>
        public event EventHandler<UIEventArgs> Items_1__BtnVolDec_PressEvent;
        private void onItems_1__BtnVolDec_Press(SmartObjectEventArgs eventArgs)
        {
            EventHandler<UIEventArgs> handler = Items_1__BtnVolDec_PressEvent;
            if (handler != null)
                handler(this, UIEventArgs.CreateEventArgs(eventArgs));
        }

        /// <inheritdoc/>
        public event EventHandler<UIEventArgs> Items_1__BtnVolInc_PressEvent;
        private void onItems_1__BtnVolInc_Press(SmartObjectEventArgs eventArgs)
        {
            EventHandler<UIEventArgs> handler = Items_1__BtnVolInc_PressEvent;
            if (handler != null)
                handler(this, UIEventArgs.CreateEventArgs(eventArgs));
        }

        /// <inheritdoc/>
        public event EventHandler<UIEventArgs> Items_2__BtnVolDec_PressEvent;
        private void onItems_2__BtnVolDec_Press(SmartObjectEventArgs eventArgs)
        {
            EventHandler<UIEventArgs> handler = Items_2__BtnVolDec_PressEvent;
            if (handler != null)
                handler(this, UIEventArgs.CreateEventArgs(eventArgs));
        }

        /// <inheritdoc/>
        public event EventHandler<UIEventArgs> Items_2__BtnVolInc_PressEvent;
        private void onItems_2__BtnVolInc_Press(SmartObjectEventArgs eventArgs)
        {
            EventHandler<UIEventArgs> handler = Items_2__BtnVolInc_PressEvent;
            if (handler != null)
                handler(this, UIEventArgs.CreateEventArgs(eventArgs));
        }

        /// <inheritdoc/>
        public event EventHandler<UIEventArgs> Items_3__BtnVolDec_PressEvent;
        private void onItems_3__BtnVolDec_Press(SmartObjectEventArgs eventArgs)
        {
            EventHandler<UIEventArgs> handler = Items_3__BtnVolDec_PressEvent;
            if (handler != null)
                handler(this, UIEventArgs.CreateEventArgs(eventArgs));
        }

        /// <inheritdoc/>
        public event EventHandler<UIEventArgs> Items_3__BtnVolInc_PressEvent;
        private void onItems_3__BtnVolInc_Press(SmartObjectEventArgs eventArgs)
        {
            EventHandler<UIEventArgs> handler = Items_3__BtnVolInc_PressEvent;
            if (handler != null)
                handler(this, UIEventArgs.CreateEventArgs(eventArgs));
        }

        /// <inheritdoc/>
        public event EventHandler<UIEventArgs> Items_4__BtnVolDec_PressEvent;
        private void onItems_4__BtnVolDec_Press(SmartObjectEventArgs eventArgs)
        {
            EventHandler<UIEventArgs> handler = Items_4__BtnVolDec_PressEvent;
            if (handler != null)
                handler(this, UIEventArgs.CreateEventArgs(eventArgs));
        }

        /// <inheritdoc/>
        public event EventHandler<UIEventArgs> Items_4__BtnVolInc_PressEvent;
        private void onItems_4__BtnVolInc_Press(SmartObjectEventArgs eventArgs)
        {
            EventHandler<UIEventArgs> handler = Items_4__BtnVolInc_PressEvent;
            if (handler != null)
                handler(this, UIEventArgs.CreateEventArgs(eventArgs));
        }

        /// <inheritdoc/>
        public event EventHandler<UIEventArgs> Items_5__BtnVolDec_PressEvent;
        private void onItems_5__BtnVolDec_Press(SmartObjectEventArgs eventArgs)
        {
            EventHandler<UIEventArgs> handler = Items_5__BtnVolDec_PressEvent;
            if (handler != null)
                handler(this, UIEventArgs.CreateEventArgs(eventArgs));
        }

        /// <inheritdoc/>
        public event EventHandler<UIEventArgs> Items_5__BtnVolInc_PressEvent;
        private void onItems_5__BtnVolInc_Press(SmartObjectEventArgs eventArgs)
        {
            EventHandler<UIEventArgs> handler = Items_5__BtnVolInc_PressEvent;
            if (handler != null)
                handler(this, UIEventArgs.CreateEventArgs(eventArgs));
        }

        /// <inheritdoc/>
        public event EventHandler<UIEventArgs> Items_0__GuageVol_LowerTouchEvent;
        private void onItems_0__GuageVol_LowerTouch(SmartObjectEventArgs eventArgs)
        {
            EventHandler<UIEventArgs> handler = Items_0__GuageVol_LowerTouchEvent;
            if (handler != null)
                handler(this, UIEventArgs.CreateEventArgs(eventArgs));
        }

        /// <inheritdoc/>
        public event EventHandler<UIEventArgs> Items_1__GuageVol_LowerTouchEvent;
        private void onItems_1__GuageVol_LowerTouch(SmartObjectEventArgs eventArgs)
        {
            EventHandler<UIEventArgs> handler = Items_1__GuageVol_LowerTouchEvent;
            if (handler != null)
                handler(this, UIEventArgs.CreateEventArgs(eventArgs));
        }

        /// <inheritdoc/>
        public event EventHandler<UIEventArgs> Items_2__GuageVol_LowerTouchEvent;
        private void onItems_2__GuageVol_LowerTouch(SmartObjectEventArgs eventArgs)
        {
            EventHandler<UIEventArgs> handler = Items_2__GuageVol_LowerTouchEvent;
            if (handler != null)
                handler(this, UIEventArgs.CreateEventArgs(eventArgs));
        }

        /// <inheritdoc/>
        public event EventHandler<UIEventArgs> Items_3__GuageVol_LowerTouchEvent;
        private void onItems_3__GuageVol_LowerTouch(SmartObjectEventArgs eventArgs)
        {
            EventHandler<UIEventArgs> handler = Items_3__GuageVol_LowerTouchEvent;
            if (handler != null)
                handler(this, UIEventArgs.CreateEventArgs(eventArgs));
        }

        /// <inheritdoc/>
        public event EventHandler<UIEventArgs> Items_4__GuageVol_LowerTouchEvent;
        private void onItems_4__GuageVol_LowerTouch(SmartObjectEventArgs eventArgs)
        {
            EventHandler<UIEventArgs> handler = Items_4__GuageVol_LowerTouchEvent;
            if (handler != null)
                handler(this, UIEventArgs.CreateEventArgs(eventArgs));
        }

        /// <inheritdoc/>
        public event EventHandler<UIEventArgs> Items_5__GuageVol_LowerTouchEvent;
        private void onItems_5__GuageVol_LowerTouch(SmartObjectEventArgs eventArgs)
        {
            EventHandler<UIEventArgs> handler = Items_5__GuageVol_LowerTouchEvent;
            if (handler != null)
                handler(this, UIEventArgs.CreateEventArgs(eventArgs));
        }

        /// <inheritdoc/>
        public void ListVolControl_List_Item1_Visible(ListVolControlBoolInputSigDelegate callback)
        {
            for (int index = 0; index < Devices.Count; index++)
            {
                callback(Devices[index].SmartObjects[ControlJoinId].BooleanInput[Joins.Booleans.ListVolControl_List_Item1_VisibleState], this);
            }
        }

        /// <inheritdoc/>
        public void ListVolControl_List_Item1_Visible(bool digital)
        {
            ListVolControl_List_Item1_Visible((sig, component) => sig.BoolValue = digital);
        }
        /// <inheritdoc/>
        public void ListVolControl_List_Item2_Visible(ListVolControlBoolInputSigDelegate callback)
        {
            for (int index = 0; index < Devices.Count; index++)
            {
                callback(Devices[index].SmartObjects[ControlJoinId].BooleanInput[Joins.Booleans.ListVolControl_List_Item2_VisibleState], this);
            }
        }

        /// <inheritdoc/>
        public void ListVolControl_List_Item2_Visible(bool digital)
        {
            ListVolControl_List_Item2_Visible((sig, component) => sig.BoolValue = digital);
        }
        /// <inheritdoc/>
        public void ListVolControl_List_Item3_Visible(ListVolControlBoolInputSigDelegate callback)
        {
            for (int index = 0; index < Devices.Count; index++)
            {
                callback(Devices[index].SmartObjects[ControlJoinId].BooleanInput[Joins.Booleans.ListVolControl_List_Item3_VisibleState], this);
            }
        }

        /// <inheritdoc/>
        public void ListVolControl_List_Item3_Visible(bool digital)
        {
            ListVolControl_List_Item3_Visible((sig, component) => sig.BoolValue = digital);
        }
        /// <inheritdoc/>
        public void ListVolControl_List_Item4_Visible(ListVolControlBoolInputSigDelegate callback)
        {
            for (int index = 0; index < Devices.Count; index++)
            {
                callback(Devices[index].SmartObjects[ControlJoinId].BooleanInput[Joins.Booleans.ListVolControl_List_Item4_VisibleState], this);
            }
        }

        /// <inheritdoc/>
        public void ListVolControl_List_Item4_Visible(bool digital)
        {
            ListVolControl_List_Item4_Visible((sig, component) => sig.BoolValue = digital);
        }
        /// <inheritdoc/>
        public void ListVolControl_List_Item5_Visible(ListVolControlBoolInputSigDelegate callback)
        {
            for (int index = 0; index < Devices.Count; index++)
            {
                callback(Devices[index].SmartObjects[ControlJoinId].BooleanInput[Joins.Booleans.ListVolControl_List_Item5_VisibleState], this);
            }
        }

        /// <inheritdoc/>
        public void ListVolControl_List_Item5_Visible(bool digital)
        {
            ListVolControl_List_Item5_Visible((sig, component) => sig.BoolValue = digital);
        }
        /// <inheritdoc/>
        public void ListVolControl_List_Item6_Visible(ListVolControlBoolInputSigDelegate callback)
        {
            for (int index = 0; index < Devices.Count; index++)
            {
                callback(Devices[index].SmartObjects[ControlJoinId].BooleanInput[Joins.Booleans.ListVolControl_List_Item6_VisibleState], this);
            }
        }

        /// <inheritdoc/>
        public void ListVolControl_List_Item6_Visible(bool digital)
        {
            ListVolControl_List_Item6_Visible((sig, component) => sig.BoolValue = digital);
        }

        /// <inheritdoc/>
        public void Items_0__GuageVol_LowerTouchfb(ListVolControlUShortInputSigDelegate callback)
        {
            for (int index = 0; index < Devices.Count; index++)
            {
                callback(Devices[index].SmartObjects[ControlJoinId].UShortInput[Joins.Numerics.Items_0__GuageVol_LowerTouchfbState], this);
            }
        }

        /// <inheritdoc/>
        public void Items_0__GuageVol_LowerTouchfb(ushort analog)
        {
            Items_0__GuageVol_LowerTouchfb((sig, component) => sig.UShortValue = analog);
        }

        /// <inheritdoc/>
        public void Items_0__GuageVol_LowerTouchfb(short analog)
        {
            Items_0__GuageVol_LowerTouchfb((sig, component) => sig.ShortValue = analog);
        }
        /// <inheritdoc/>
        public void Items_1__GuageVol_LowerTouchfb(ListVolControlUShortInputSigDelegate callback)
        {
            for (int index = 0; index < Devices.Count; index++)
            {
                callback(Devices[index].SmartObjects[ControlJoinId].UShortInput[Joins.Numerics.Items_1__GuageVol_LowerTouchfbState], this);
            }
        }

        /// <inheritdoc/>
        public void Items_1__GuageVol_LowerTouchfb(ushort analog)
        {
            Items_1__GuageVol_LowerTouchfb((sig, component) => sig.UShortValue = analog);
        }

        /// <inheritdoc/>
        public void Items_1__GuageVol_LowerTouchfb(short analog)
        {
            Items_1__GuageVol_LowerTouchfb((sig, component) => sig.ShortValue = analog);
        }
        /// <inheritdoc/>
        public void Items_2__GuageVol_LowerTouchfb(ListVolControlUShortInputSigDelegate callback)
        {
            for (int index = 0; index < Devices.Count; index++)
            {
                callback(Devices[index].SmartObjects[ControlJoinId].UShortInput[Joins.Numerics.Items_2__GuageVol_LowerTouchfbState], this);
            }
        }

        /// <inheritdoc/>
        public void Items_2__GuageVol_LowerTouchfb(ushort analog)
        {
            Items_2__GuageVol_LowerTouchfb((sig, component) => sig.UShortValue = analog);
        }

        /// <inheritdoc/>
        public void Items_2__GuageVol_LowerTouchfb(short analog)
        {
            Items_2__GuageVol_LowerTouchfb((sig, component) => sig.ShortValue = analog);
        }
        /// <inheritdoc/>
        public void Items_3__GuageVol_LowerTouchfb(ListVolControlUShortInputSigDelegate callback)
        {
            for (int index = 0; index < Devices.Count; index++)
            {
                callback(Devices[index].SmartObjects[ControlJoinId].UShortInput[Joins.Numerics.Items_3__GuageVol_LowerTouchfbState], this);
            }
        }

        /// <inheritdoc/>
        public void Items_3__GuageVol_LowerTouchfb(ushort analog)
        {
            Items_3__GuageVol_LowerTouchfb((sig, component) => sig.UShortValue = analog);
        }

        /// <inheritdoc/>
        public void Items_3__GuageVol_LowerTouchfb(short analog)
        {
            Items_3__GuageVol_LowerTouchfb((sig, component) => sig.ShortValue = analog);
        }
        /// <inheritdoc/>
        public void Items_4__GuageVol_LowerTouchfb(ListVolControlUShortInputSigDelegate callback)
        {
            for (int index = 0; index < Devices.Count; index++)
            {
                callback(Devices[index].SmartObjects[ControlJoinId].UShortInput[Joins.Numerics.Items_4__GuageVol_LowerTouchfbState], this);
            }
        }

        /// <inheritdoc/>
        public void Items_4__GuageVol_LowerTouchfb(ushort analog)
        {
            Items_4__GuageVol_LowerTouchfb((sig, component) => sig.UShortValue = analog);
        }

        /// <inheritdoc/>
        public void Items_4__GuageVol_LowerTouchfb(short analog)
        {
            Items_4__GuageVol_LowerTouchfb((sig, component) => sig.ShortValue = analog);
        }
        /// <inheritdoc/>
        public void Items_5__GuageVol_LowerTouchfb(ListVolControlUShortInputSigDelegate callback)
        {
            for (int index = 0; index < Devices.Count; index++)
            {
                callback(Devices[index].SmartObjects[ControlJoinId].UShortInput[Joins.Numerics.Items_5__GuageVol_LowerTouchfbState], this);
            }
        }

        /// <inheritdoc/>
        public void Items_5__GuageVol_LowerTouchfb(ushort analog)
        {
            Items_5__GuageVol_LowerTouchfb((sig, component) => sig.UShortValue = analog);
        }

        /// <inheritdoc/>
        public void Items_5__GuageVol_LowerTouchfb(short analog)
        {
            Items_5__GuageVol_LowerTouchfb((sig, component) => sig.ShortValue = analog);
        }

        /// <inheritdoc/>
        public void Items_0__StrVolName_Indirect(ListVolControlStringInputSigDelegate callback)
        {
            for (int index = 0; index < Devices.Count; index++)
            {
                callback(Devices[index].SmartObjects[ControlJoinId].StringInput[Joins.Strings.Items_0__StrVolName_IndirectState], this);
            }
        }

        /// <inheritdoc/>
        public void Items_0__StrVolName_Indirect(string serial)
        {
            Items_0__StrVolName_Indirect((sig, component) => sig.StringValue = serial);
        }
        /// <inheritdoc/>
        public void Items_1__StrVolName_Indirect(ListVolControlStringInputSigDelegate callback)
        {
            for (int index = 0; index < Devices.Count; index++)
            {
                callback(Devices[index].SmartObjects[ControlJoinId].StringInput[Joins.Strings.Items_1__StrVolName_IndirectState], this);
            }
        }

        /// <inheritdoc/>
        public void Items_1__StrVolName_Indirect(string serial)
        {
            Items_1__StrVolName_Indirect((sig, component) => sig.StringValue = serial);
        }
        /// <inheritdoc/>
        public void Items_2__StrVolName_Indirect(ListVolControlStringInputSigDelegate callback)
        {
            for (int index = 0; index < Devices.Count; index++)
            {
                callback(Devices[index].SmartObjects[ControlJoinId].StringInput[Joins.Strings.Items_2__StrVolName_IndirectState], this);
            }
        }

        /// <inheritdoc/>
        public void Items_2__StrVolName_Indirect(string serial)
        {
            Items_2__StrVolName_Indirect((sig, component) => sig.StringValue = serial);
        }
        /// <inheritdoc/>
        public void Items_3__StrVolName_Indirect(ListVolControlStringInputSigDelegate callback)
        {
            for (int index = 0; index < Devices.Count; index++)
            {
                callback(Devices[index].SmartObjects[ControlJoinId].StringInput[Joins.Strings.Items_3__StrVolName_IndirectState], this);
            }
        }

        /// <inheritdoc/>
        public void Items_3__StrVolName_Indirect(string serial)
        {
            Items_3__StrVolName_Indirect((sig, component) => sig.StringValue = serial);
        }
        /// <inheritdoc/>
        public void Items_4__StrVolName_Indirect(ListVolControlStringInputSigDelegate callback)
        {
            for (int index = 0; index < Devices.Count; index++)
            {
                callback(Devices[index].SmartObjects[ControlJoinId].StringInput[Joins.Strings.Items_4__StrVolName_IndirectState], this);
            }
        }

        /// <inheritdoc/>
        public void Items_4__StrVolName_Indirect(string serial)
        {
            Items_4__StrVolName_Indirect((sig, component) => sig.StringValue = serial);
        }
        /// <inheritdoc/>
        public void Items_5__StrVolName_Indirect(ListVolControlStringInputSigDelegate callback)
        {
            for (int index = 0; index < Devices.Count; index++)
            {
                callback(Devices[index].SmartObjects[ControlJoinId].StringInput[Joins.Strings.Items_5__StrVolName_IndirectState], this);
            }
        }

        /// <inheritdoc/>
        public void Items_5__StrVolName_Indirect(string serial)
        {
            Items_5__StrVolName_Indirect((sig, component) => sig.StringValue = serial);
        }

        #endregion

        #region Overrides

        public override int GetHashCode()
        {
            return (int)ControlJoinId;
        }

        public override string ToString()
        {
            return string.Format("Contract: {0} Component: {1} HashCode: {2} {3}", "ListVolControl", GetType().Name, GetHashCode(), UserObject != null ? "UserObject: " + UserObject : null);
        }

        #endregion

        #region IDisposable

        public bool IsDisposed { get; set; }

        public void Dispose()
        {
            if (IsDisposed)
                return;

            IsDisposed = true;

            BtnVolDec_PressEvent = null;
            Items_0__BtnVolDec_PressEvent = null;
            BtnVolInc_PressEvent = null;
            Items_0__BtnVolInc_PressEvent = null;
            Items_1__BtnVolDec_PressEvent = null;
            Items_1__BtnVolInc_PressEvent = null;
            Items_2__BtnVolDec_PressEvent = null;
            Items_2__BtnVolInc_PressEvent = null;
            Items_3__BtnVolDec_PressEvent = null;
            Items_3__BtnVolInc_PressEvent = null;
            Items_4__BtnVolDec_PressEvent = null;
            Items_4__BtnVolInc_PressEvent = null;
            Items_5__BtnVolDec_PressEvent = null;
            Items_5__BtnVolInc_PressEvent = null;
            GuageVol_LowerTouchEvent = null;
            Items_0__GuageVol_LowerTouchEvent = null;
            Items_1__GuageVol_LowerTouchEvent = null;
            Items_2__GuageVol_LowerTouchEvent = null;
            Items_3__GuageVol_LowerTouchEvent = null;
            Items_4__GuageVol_LowerTouchEvent = null;
            Items_5__GuageVol_LowerTouchEvent = null;
        }

        #endregion
    }
}
